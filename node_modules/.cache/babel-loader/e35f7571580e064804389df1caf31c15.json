{"ast":null,"code":"var _jsxFileName = \"/home/william/LiTHe Bl\\xE5s/beerpleasureapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [price, setPrice] = useState();\n\n  const handleChange = evt => {\n    //https://www.pluralsight.com/guides/handling-multiple-inputs-with-single-onchange-handler-react\n    const value = evt.target.value;\n    setForms({ ...forms,\n      [evt.target.name]: value\n    }); // console.log(\"new value:\", evt.target.value);\n\n    setChanges({ ...changes,\n      [evt.target.name]: value\n    }); //console.log(forms)\n\n    console.log(changes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        value: price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"E1b7rtCUmluCFPlOXJirrPbLd2g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/william/LiTHe BlÃ¥s/beerpleasureapp/src/App.js"],"names":["logo","useState","App","price","setPrice","handleChange","evt","value","target","setForms","forms","name","setChanges","changes","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,EAAlC;;AAEA,QAAMI,YAAY,GAAIC,GAAD,IAAS;AAAG;AAC/B,UAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAWD,KAAzB;AACAE,IAAAA,QAAQ,CAAC,EACP,GAAGC,KADI;AACG,OAACJ,GAAG,CAACE,MAAJ,CAAWG,IAAZ,GAAmBJ;AADtB,KAAD,CAAR,CAF4B,CAK5B;;AACAK,IAAAA,UAAU,CAAC,EACT,GAAGC,OADM;AACG,OAACP,GAAG,CAACE,MAAJ,CAAWG,IAAZ,GAAmBJ;AADtB,KAAD,CAAV,CAN4B,CAS5B;;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,GAXD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,6BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAEV,KAAvC;AAA8C,QAAA,QAAQ,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAzBQH,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [price, setPrice] = useState();\n\n  const handleChange = (evt) => {  //https://www.pluralsight.com/guides/handling-multiple-inputs-with-single-onchange-handler-react\n    const value = evt.target.value;\n    setForms({\n      ...forms, [evt.target.name]: value\n    });\n    // console.log(\"new value:\", evt.target.value);\n    setChanges({\n      ...changes, [evt.target.name]: value\n    });\n    //console.log(forms)\n    console.log(changes)\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <div>\n      <input type=\"text\" name=\"price\" value={price} onChange={handleChange} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}